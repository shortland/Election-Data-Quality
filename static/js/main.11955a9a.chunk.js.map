{"version":3,"sources":["data/New_York_Congressional_Districts.GeoJSON","data/AppData.js","layers/StateLayer.js","layers/PrecinctLayer.js","layers/CongressionalLayer.js","components/map/ErrorPins.js","components/map/ErrorModal.js","components/navbar/StateSelector.js","components/sidebar/ElectionDisplayBar.js","components/sidebar/DemographicsTable.js","components/sidebar/DataCorrectionPage.js","components/sidebar/Comments.js","components/sidebar/CommentModal.js","components/sidebar/LeftSidebar.js","components/map/toolbar.js","components/navbar/UserModeSelector.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AppData","asyncFetch","url","a","fetch","response","json","this","allStates","baseUrl","data","status","alert","i","features","type","content","feature","properties","name","id","congressional_districts","congressionalDistrictIds","geometry","push","featureCollection","stateID","concat","stateLayerFill","paint","stateLayerFillHighlight","source","precinctLayerFill","precinctLayerFillHighlight","precinctLayerOutline","congressionalLayerFill","congressionalLayerFillHighlight","congressionalLayerOutline","Pins","props","onClick","shouldShowPins","console","log","map","city","index","key","longitude","latitude","height","viewBox","style","cursor","fill","stroke","transform","d","PureComponent","ErrorInfo","info","textAlign","from","StateSelector","Dropdown","Toggle","variant","Menu","Item","href","select_state","Component","ElectionDisplayBar","state","election","electionResults","year","clinton","Math","random","trump","round","setState","keys","Object","ButtonGroup","size","className","Button","changeElection","bind","width","DemographicsTable","Table","striped","bordered","hover","colSpan","DataCorrectionPage","dismiss","data_correction_page_status","Form","Group","controlId","Label","Control","as","placeholder","save_changes","Comments","comments","get_comments","prevProps","savedCommentData","get_saved_comments","new_comments","numComments","ceil","commenter","comment","displayed_comments","Card","Body","CommentModal","show","display","user","text","comment_data","handle_modal_display","Modal","onHide","Header","closeButton","Title","Footer","saveCommentData","document","getElementById","value","LeftSidebar","createList","list","selected","p","get_data_correction_page_status","page_status","mode","get_comments_modal_data","comment_modal_data","_handleClick","event","showErrorPins","undefined","length","trigger","open","MODES","EditorModes","SELECT","icon","DRAW_POINT","DRAW_PATH","DRAW_POLYGON","DRAW_RECTANGLE","Container","styled","div","Row","hovered","Img","img","Tooltip","Delete","Toolbar","_onHover","evt","hoveredId","target","_onDelete","onDelete","deleting","setTimeout","_onSaveChange","toolBarRequest","selectedMode","m","onSwitchMode","onMouseOver","onMouseOut","_","src","UserModeSelector","userModeSelect","MAPBOX_API","App","mapRef","React","createRef","handleViewportChange","viewport","handleGeocoderViewportChange","transitionDuration","handleOnResult","result","searchResultLayer","GeoJsonLayer","getFillColor","getRadius","pointRadiusMinPixels","pointRadiusMaxPixels","selectedFeatureIndex","toast","position","POSITION","BOTTOM_RIGHT","splice","READ_ONLY","_editorRef","deleteFeatures","_switchMode","_onSelect","_onUpdate","_onSaveRequest","selected_saved_feature","_renderToolbar","userMode","onSelect","selectedFeatureId","_onClick","stateFeature","find","f","layer","countyFeature","congressionalFeature","precinctFeature","selectedFeature","_zoomToFeature","NAME","getFeatureFilter","isState","isCounty","isCongressional","NAMELSAD","isPrecinct","GEOID10","srcEvent","x","y","stateHovered","countyHovered","congressionalHovered","precinctHovered","filter","hoveredFeature","_onClickError","error_data","popupInfo","zoom","toggleLayer","layers","states","counties","congressional","precincts","parks","_renderCheckboxes","border","backgroundColor","Check","label","defaultChecked","onChange","lineHeight","stateData","countyData","countyDataOutline","congressionalDistrictData","precinctData","window","innerHeight","appData","filters","countyFilter","precinctFilter","stateFilter","congressionalFilter","bbox","minLng","minLat","maxLng","maxLat","WebMercatorViewport","fitBounds","padding","transitionInterpolator","LinearInterpolator","around","offsetCenter","left","top","FIPS_CODE","tipSize","anchor","closeOnClick","onClose","fetchAllStates","then","fetchAllCongressionalDistricts","cdData","maxzoom","minzoom","precinct","state_abv","stateSelect","onViewportChange","mapStyle","mapboxApiAccessToken","onHover","doubleClickZoom","ref","fontSize","right","clickRadius","onUpdate","onResult","renderStateLayers","renderCongressionalLayers","renderPrecinctLayers","_renderTooltip","ERRORS","_renderErrorPopup","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11955a9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/New_York_Congressional_Districts.92d17ef6.GeoJSON\";","import { json } from 'd3-request';\n/**\n * A js class to access all our fetch API calls through\n */\nclass AppData {\n\n    constructor() {\n        this.allStates = null;\n\n        // For development\n        // this.baseUrl = \"//0.0.0.0:1234/\";\n\n        // For production\n        this.baseUrl = \"//ElectionDataQuality.com:1234/\";\n    }\n\n    asyncFetch = async (url) => {\n        const response = await fetch(url);\n        const json = await response.json();\n\n        return json;\n    }\n\n    async fetchAllStates() {\n        const data = await this.asyncFetch(this.baseUrl + 'allStates');\n\n        if (data.status != \"ok\") {\n            alert(\"server error: unable to get data\");\n            return;\n        }\n\n        let features = {\n            type: \"FeatureCollection\",\n            features: [],\n        };\n\n        for (let i in data.content) {\n            let feature = {\n                type: \"Feature\",\n                properties: {\n                    name: data.content[i].name,\n                    id: data.content[i].id,\n                    congressional_districts: data.content[i].congressionalDistrictIds,\n                },\n                geometry: data.content[i].geometry,\n            };\n\n            features.features.push(feature);\n        }\n\n        return {\n            featureCollection: features,\n        };\n    }\n\n    async fetchCongressionalDistrictByState(stateID) {\n        const data = await this.asyncFetch(this.baseUrl + 'congressionalDistrictsForState?stateId='.concat(stateID));\n\n        if (data.status != \"ok\") {\n            alert(\"server error: unable to get data\");\n            return;\n        }\n\n        return data.content;\n    }\n\n    async fetchAllCongressionalDistricts() {\n        const data = await this.asyncFetch(this.baseUrl + 'allCongressionalDistricts');\n\n        if (data.status != \"ok\") {\n            alert(\"server error: unable to get data\");\n            return;\n        }\n\n        return data.content;\n    }\n\n    // fetchCongressionalDistrictByCID(CID) {\n    //     return this.asyncFetch(this.baseUrl + 'congressionalDistrict?cid='.concat(CID))\n    //         .then(data => {\n    //             if (data.status != \"ok\") {\n    //                 alert(\"server error: unable to get data\");\n    //                 return;\n    //             }\n\n    //             return data.content;\n    //         });\n    // }\n\n    fetchPrecincts() {\n\n    }\n}\n\nexport default AppData;","export const stateLayerFill = {\n    id: 'stateFill',\n    type: 'fill',\n    paint: {\n        'fill-color': 'rgba(66, 135, 245, 0.3)',\n    },\n};\n\nexport const stateLayerFillHighlight = {\n    id: 'stateFillHighlighted',\n    type: 'fill',\n    source: 'stateFill',\n    paint: {\n        'fill-color': 'rgba(66, 135, 245, 0.5)',\n    },\n};","export const precinctLayerFill = {\n    id: 'precinctFill',\n    type: 'fill',\n    paint: {\n        'fill-color': 'rgba(0, 0, 0, 0.0)',\n    },\n};\n\nexport const precinctLayerFillHighlight = {\n    id: 'precinctFillHighlighted',\n    type: 'fill',\n    source: 'precinctFill',\n    paint: {\n        'fill-color': 'rgba(66, 135, 245, 0.5)',\n    },\n};\n\nexport const precinctLayerOutline = {\n    id: 'precinctOutline',\n    type: 'line',\n    paint: {\n        'line-color': 'rgba(66, 135, 245, 1.0)',\n        'line-width': 1,\n    },\n};","export const congressionalLayerFill = {\n    id: 'congressionalFill',\n    type: 'fill',\n    paint: {\n        'fill-color': 'rgba(0, 0, 0, 0.0)',\n    },\n};\n\nexport const congressionalLayerFillHighlight = {\n    id: 'congressionalFillHighlighted',\n    type: 'fill',\n    source: 'congressionalFill',\n    paint: {\n        'fill-color': 'rgba(66, 135, 245, 0.5)',\n    },\n};\n\nexport const congressionalLayerOutline = {\n    id: 'congressionalOutline',\n    type: 'line',\n    paint: {\n        'line-color': 'rgba(14, 14, 14, 0.5)',\n        'line-width': 2,\n    },\n};","import React, { PureComponent } from 'react';\nimport { Marker } from 'react-map-gl';\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\nconst SIZE = 20;\n\n// Important for perf: the markers never change, avoid rerender when the map viewport changes\nexport default class Pins extends PureComponent {\n\n    render() {\n        const { data, onClick, shouldShowPins } = this.props;\n        console.log(shouldShowPins);\n        if (shouldShowPins) {\n            console.log(\"should show pins\");\n            return data.map((city, index) => (\n                <Marker key={`marker-${index}`} longitude={city.longitude} latitude={city.latitude}>\n                    <svg\n                        height={SIZE}\n                        viewBox=\"0 0 24 24\"\n                        style={{\n                            cursor: 'pointer',\n                            fill: '#d00',\n                            stroke: 'none',\n                            transform: `translate(${-SIZE / 2}px,${-SIZE}px)`\n                        }}\n                        onClick={() => onClick(city)}\n                    >\n                        <path d={ICON} />\n                    </svg>\n                </Marker>\n            ));\n        } else {\n            return (<span></span>);\n        }\n\n    }\n}","import React, { PureComponent } from 'react';\n\nexport default class ErrorInfo extends PureComponent {\n    render() {\n        const { info } = this.props;\n\n        return (\n            <div>\n                <h3>Map Error</h3>\n                <br />\n                <p style={{ textAlign: 'left' }}>\n                    Type: {info.type}\n                    <br />\n                    Source: {info.from}\n                </p>\n            </div >\n        );\n    }\n}","import React, { Component } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nclass StateSelector extends Component {\n  render() {\n    return (\n      <Dropdown>\n        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n          Select State\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item\n            href=\"#/NewYork\"\n            onClick={this.props.select_state(\"NY\")}\n          >\n            New York\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#/Utah\" onClick={this.props.select_state(\"UT\")}>\n            Utah\n          </Dropdown.Item>\n          <Dropdown.Item\n            href=\"#/Wisconsin\"\n            onClick={this.props.select_state(\"WI\")}\n          >\n            Wisconsin\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default StateSelector;\n","import React, { Component } from 'react';\n\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\n\n\nclass ElectionDisplayBar extends Component {\n    constructor(props) {\n        super(props);\n        //this.electionResults = { \"Clinton\": 60, \"Trump\": 40, \"Other\": 5 };\n        this.state = {\n            election: 2016,\n            electionResults: { \"Dem\": 60, \"Rep\": 40, \"Other\": 5 }\n        }\n    }\n\n    changeElection(year) {\n        let clinton = Math.random() * 100;\n        clinton = Math.round(clinton);\n        let trump = 100 - clinton;\n        this.setState({ election: year, electionResults: { \"Dem\": clinton, \"Rep\": trump } });\n    }\n\n    render() {\n        const { electionResults } = this.state;\n\n        let keys = Object.keys(electionResults);\n        //let values = Object.values(electionResults);\n\n        if (electionResults) {\n\n            return (\n                <div>\n                    <ButtonGroup size=\"sm\" className=\"mt-3\">\n                        <Button variant=\"outline-primary\" id=\"btn1\" className=\"button\" onClick={this.changeElection.bind(this, 2016)}>2016</Button>\n                        {/* <Button variant=\"outline-primary\" id=\"btn2\" className=\"button\" onClick={this.changeElection.bind(this, 2012)}>2016</Button> */}\n                        <Button variant=\"outline-primary\" id=\"btn3\" className=\"button\" onClick={this.changeElection.bind(this, 2008)}>2018</Button>\n                    </ButtonGroup>\n                    <br />\n                    <hr />\n                    Presidential:\n                    <div className=\"BarDisplay\">\n                        <div className=\"BlueBar\" style={{ width: electionResults[keys[0]] + '%' }}>\n                            {keys[0] + ' ' + electionResults[keys[0]] + '%'}\n                        </div>\n                        <div className=\"RedBar\" style={{ width: electionResults[keys[1]] + '%' }}>\n                            {keys[1] + ' ' + electionResults[keys[1]] + '%'}\n                        </div>\n                    </div>\n                    <br />\n                    <hr />\n                    Congressional:\n                    <div className=\"BarDisplay\">\n                        <div className=\"BlueBar\" style={{ width: electionResults[keys[0]] + '%' }}>\n                            {keys[0] + ' ' + electionResults[keys[0]] + '%'}\n                        </div>\n                        <div className=\"RedBar\" style={{ width: electionResults[keys[1]] + '%' }}>\n                            {keys[1] + ' ' + electionResults[keys[1]] + '%'}\n                        </div>\n                    </div>\n                    <a className=\"dataSource\" href=\"https://electionlab.mit.edu/data\">source</a>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ElectionDisplayBar;","import React, { PureComponent } from 'react';\n\nimport Table from 'react-bootstrap/Table';\n\nclass DemographicsTable extends PureComponent {\n    render() {\n        return (\n            <div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>Race</th>\n                            <th>Num</th>\n                            <th>Percent</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <th>White</th>\n                            <td>112</td>\n                            <td>44%</td>\n                        </tr>\n                        <tr>\n                            <th>Black</th>\n                            <td>55</td>\n                            <td>22%</td>\n                        </tr>\n                        <tr>\n                            <th>Hispanic</th>\n                            <td>80</td>\n                            <td>32%</td>\n                        </tr>\n                        <tr>\n                            <th>Asian</th>\n                            <td>6</td>\n                            <td>2%</td>\n                        </tr>\n                        <tr>\n                            <th>Other</th>\n                            <td>0</td>\n                            <td>0%</td>\n                        </tr>\n                    </tbody>\n                    <tfoot>\n                        <tr>\n                            <th colSpan=\"2\">Total Population</th>\n                            <td>253</td>\n                        </tr>\n                    </tfoot>\n                </Table>\n                <a className=\"dataSource\" href=\"https://electionlab.mit.edu/data\">source</a>\n            </div>\n        );\n    }\n}\n\nexport default DemographicsTable;","import React, { Component } from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form'\n\n\n\nclass DataCorrectionPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    save_changes() {\n        this.dismiss();\n    }\n\n    dismiss() {\n        this.props.data_correction_page_status(\"done\");\n    }\n\n\n    render() {\n        return (\n            <div className=\"data_correction_page\">\n                <h4>Data Correction Form</h4>\n                <Form>\n                    <Form.Group controlId=\"data_correction.target_data\">\n                        <Form.Label>Data for correction</Form.Label>\n                        <Form.Control as=\"select\">\n                            <option>Demographic</option>\n                            <option>Election</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId=\"data_correction.value\">\n                        <Form.Label>Changed Value</Form.Label>\n                        <Form.Control type=\"value\" placeholder=\"Please enter corrected data\" />\n                    </Form.Group>\n                </Form>\n                <div className=\"data_correction_Btns\">\n                    <Button variant=\"outline-primary\" id=\"data_change\" onClick={() => { this.save_changes() }}>Change</Button>\n                    <Button variant=\"outline-primary\" id=\"data_change_cancel\" onClick={() => { this.dismiss() }}>Cancel</Button>\n                </div>\n                <br />\n            </div>\n        );\n    }\n}\n\nexport default DataCorrectionPage;","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\n\nclass Comments extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            comments: []\n        };\n    }\n\n    componentDidMount() {\n        this.get_comments();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.savedCommentData !== this.props.savedCommentData) {\n            this.get_saved_comments();\n        }\n    }\n\n    //Dynamically shows saved comments from comment modal\n    get_saved_comments() {\n        console.log(\"________________\", this.props.savedCommentData)\n        if (this.props.savedCommentData) {\n            this.setState((state) => {\n                let new_comments = state.comments;\n                new_comments.push(this.props.savedCommentData);\n                return { comments: new_comments }\n            });\n        }\n    }\n\n    // this is just for the presentation\n    get_comments() {\n        let numComments = Math.ceil(Math.random() * 3);\n        let commenter = [\"David\", \"Ilan\", \"Reed\", \"Sam\"];\n        let content = [\"Some comment about changing the election data b/c old source was invalid.\", \"Some comment about undoing the yesterdays changes done to the boundaries of the Albany county of NY.\", \"Some test comment.\", \"Another test comment.\"];\n        let comments = [];\n        for (let i = 0; i < numComments; i++) {\n            let comment = {\n                commenter: commenter[Math.round(Math.random() * 3)],\n                content: content[Math.round(Math.random() * 3)]\n            }\n            comments.push(comment);\n        }\n        this.setState({ comments: comments });\n    }\n\n    render() {\n        const { comments } = this.state;\n        const displayed_comments = [];\n        for (let i in comments) {\n            displayed_comments.push(\n                <Card>\n                    <Card.Body>\n                        {comments[i].commenter}{\": \"}{comments[i].content}\n                    </Card.Body>\n                </Card>\n            );\n        }\n\n        return (\n            <div >\n                {displayed_comments}\n            </div >\n        );\n    }\n}\n\nexport default Comments;","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nclass CommentModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        };\n    }\n\n    //display is boolean\n    handle_modal_display(display) {\n        this.setState({ show: display });\n    }\n\n    saveCommentData(user, text) {\n        let comment_data = {\n            commenter: user,\n            content: text\n        };\n        this.props.savedCommentData(comment_data);\n    }\n\n    render() {\n        const { show } = this.state;\n        return (\n            <div>\n                <Button variant=\"primary\" onClick={() => { this.handle_modal_display(true) }}>Create Comment</Button>\n                <Modal show={show} onHide={() => { this.handle_modal_display(false) }}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Enter comment</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <input id=\"commentModalInput\" placeholder=\" Please enter your comments here\"></input>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={() => { this.handle_modal_display(false) }}>Cancel</Button>\n                        <Button variant=\"primary\" onClick={() => {\n                            this.handle_modal_display(false);\n                            this.saveCommentData(\"User\", document.getElementById(\"commentModalInput\").value);\n                        }}>Save Comment</Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default CommentModal;","import React, { Component } from 'react';\n\nimport Collapsible from 'react-collapsible';\n\nimport ElectionDisplayBar from './ElectionDisplayBar';\nimport DemographicsTable from './DemographicsTable';\nimport DataCorrectionPage from './DataCorrectionPage';\nimport Comments from './Comments';\nimport CommentModal from './CommentModal';\n\nclass LeftSidebar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"data_display\",\n            comment_data: undefined\n        }\n    }\n\n    createList = () => {\n        let list = [];\n\n        const feature = this.props.selected; //the selected feature\n\n        if (feature) {\n            if (feature.properties) {\n                const properties = feature.properties;\n                for (const p in properties) {\n                    list.push(<div>{`${p}: ${properties[p]}`}</div>);\n                }\n                // list.push(<div>State: {properties['name']}</div>);\n            }\n        }\n        return list;\n    }\n\n    //For data correction page to return page_status\n    get_data_correction_page_status = (page_status) => {\n        if (page_status === \"done\") {\n            this.setState({ mode: \"data_display\" });\n        }\n    }\n\n    get_comments_modal_data = (comment_modal_data) => {\n        if (comment_modal_data) {\n            this.setState({ comment_data: comment_modal_data });\n        }\n    }\n\n    _handleClick = event => {\n        this.props.showErrorPins();\n    }\n\n    makeHeader(){\n        const feature = this.props.selected;\n\n        if(feature && feature.properties && feature.properties.type){\n            //let name = feature.properties.name || feature.properties.NAME || feature.properties.GEOID10 || feature.properties.NAMELSAD\n            let type = feature.properties.type;\n        }\n    }\n\n    render() {\n        const { mode } = this.state;\n        const { comment_data } = this.state;\n        const list = this.createList();\n        // const feature = this.props.selected;\n\n        if (list.length > 0) {\n            if (mode === \"data_display\") {\n                return (\n                    <div >\n                        <h5></h5>\n                        <Collapsible trigger=\"View General Info\" open={true}>\n                            {list}\n                        </Collapsible>\n                        <Collapsible trigger=\"View Elections\">\n                            <ElectionDisplayBar />\n                        </Collapsible>\n                        <Collapsible trigger=\"View Demographics\">\n                            <DemographicsTable />\n                        </Collapsible>\n                        <Collapsible trigger=\"Modify Data\">\n                            <DataCorrectionPage data_correction_page_status={this.get_data_correction_page_status} />\n                        </Collapsible>\n                        <Collapsible trigger=\"View Comments\">\n                            <Comments savedCommentData={comment_data} />\n                            <br />\n                            <CommentModal savedCommentData={this.get_comments_modal_data} />\n                            <br />\n                        </Collapsible>\n                        <Collapsible trigger=\"View Map Errors\">\n                            <button className=\"Extra-Large-Button\" onClick={this._handleClick}>View All</button>\n                            <button className=\"Extra-Large-Button\" onClick={this._handleClick}>View Self Intersecting Boundaries</button>\n                            <button className=\"Extra-Large-Button\" onClick={this._handleClick}>View Open Borders</button>\n                            <button className=\"Extra-Large-Button\" onClick={this._handleClick}>View Gaps in Precinct Coverage</button>\n                            <button className=\"Extra-Large-Button\" onClick={this._handleClick}>View Precinct Multipolygon</button>\n                            <button className=\"Extra-Large-Button\" onClick={this._handleClick}>View Overlapping Precincts</button>\n                        </Collapsible>\n                    </div >\n                );\n            }\n        }\n        return (\n            <div>\n                Click on a highlighted state to view details\n            </div>\n        );\n    }\n}\n\nexport default LeftSidebar;","/* global setTimeout */\nimport React, { PureComponent } from 'react';\nimport styled from 'styled-components';\nimport { EditorModes } from 'react-map-gl-draw';\n\n\nconst MODES = [\n    { id: EditorModes.SELECT, text: 'Edit Feature', icon: 'icon-select.svg' },\n    { id: EditorModes.DRAW_POINT, text: 'Draw Point', icon: 'icon-point.svg' },\n    { id: EditorModes.DRAW_PATH, text: 'Draw Polyline', icon: 'icon-path.svg' },\n    { id: EditorModes.DRAW_POLYGON, text: 'Draw Polygon', icon: 'icon-polygon.svg' },\n    { id: EditorModes.DRAW_RECTANGLE, text: 'Draw Rectangle', icon: 'icon-rectangle.svg' }\n];\n\nconst Container = styled.div`\n  position: absolute;\n//   width: 48px;\n  left: 260px;\n  top: 240px;\n  background: #fff;\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.15);\n  outline: none;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 0px;\n  margin: 0px;\n`;\n\nconst Row = styled.div`\n  height: 34px;\n  width: 34px;\n  padding: 7px;\n  display: flex;\n  justify-content: left;\n  color: ${props => (props.selected ? '#ffffff' : 'inherit')};\n  background: ${props => (props.selected ? '#0071bc' : props.hovered ? '#e6e6e6' : 'inherit')};\n`;\n\nconst Img = styled.img`\n  max-width: 20px !important;\n`;\n\nconst Tooltip = styled.div`\n  position: absolute;\n  left: 52px;\n  padding: 4px;\n  background: rgba(0, 0, 0, 0.8);\n  color: #fff;\n  min-width: 100px;\n  max-width: 300px;\n  height: 24px;\n  font-size: 12px;\n  z-index: 9;\n  pointer-events: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Delete = styled(Row)`\n  &:hover {\n    background: ${props => (props.selected ? '#0071bc' : '#e6e6e6')};\n  }\n  &:active: {\n    background: ${props => (props.selected ? '#0071bc' : 'inherit')};\n  }\n`;\n\nexport default class Toolbar extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deleting: false,\n            hoveredId: null,\n        };\n    }\n\n    _onHover = evt => {\n        this.setState({ hoveredId: evt && evt.target.id });\n    };\n\n    //TODO probably dont neet to pass the evt \n    _onDelete = () => {\n        this.props.onDelete();\n        this.setState({ deleting: true });\n        setTimeout(() => this.setState({ deleting: false }), 500)\n    };\n\n    _onSaveChange = () => {\n        console.log(this.props.features)\n        this.props.toolBarRequest(this.props.features.data);\n    }\n\n    render() {\n        const { selectedMode } = this.props;\n        const { hoveredId } = this.state;\n        return (\n            <Container>\n                {MODES.map(m => {\n                    return (\n                        <Row\n                            onClick={this.props.onSwitchMode}\n                            onMouseOver={this._onHover}\n                            onMouseOut={_ => this._onHover(null)}\n                            selected={m.id === selectedMode}\n                            hovered={m.id === hoveredId}\n                            key={m.id}\n                            id={m.id}\n                        >\n                            <Img id={m.id} onMouseOver={this._onHover} src={m.icon} />\n                            {hoveredId === m.id && <Tooltip>{m.text}</Tooltip>}\n                        </Row>\n                    );\n                })}\n                <Delete\n                    selected={this.state.deleting}\n                    onClick={this._onDelete}\n                    onMouseOver={this._onHover}\n                    onMouseOut={_ => this._onHover(null)}\n                >\n                    <Img\n                        id={'delete'}\n                        onMouseOver={this._onHover}\n                        src={'icon-delete.svg'}\n                    />\n                    {hoveredId === 'delete' && <Tooltip>{'Delete'}</Tooltip>}\n                </Delete>\n                <Row\n                    onClick={() => this._onSaveChange()}\n                    onMouseOver={this._onHover}\n                    onMouseOut={_ => this._onHover(null)}\n                    id=\"saveDrawBtn\"\n                ><span style={{ \"fontSize\": \"10px\" }}> save</span></Row>\n            </Container>\n        );\n    }\n}\n","import React, { Component } from \"react\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nclass UserModeSelector extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  // NOTE: Change to \"toggle mode\" which would be a button that shows a toast everytime you toggle mode\n  render() {\n    return (\n      <Dropdown>\n        <Dropdown.Toggle variant=\"info\" id=\"userModeSelect\">\n          Select Mode\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() => this.props.userModeSelect(\"View\")}>\n            View\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => this.props.userModeSelect(\"Edit\")}>\n            Edit\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default UserModeSelector;\n","import React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport MapGL, {\n  Popup,\n  NavigationControl,\n  FullscreenControl,\n  ScaleControl,\n  Source,\n  Layer,\n  LinearInterpolator,\n  WebMercatorViewport,\n} from \"react-map-gl\";\nimport { Nav, Navbar, Form } from \"react-bootstrap\";\nimport { json } from \"d3-request\";\nimport bbox from \"@turf/bbox\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport { GeoJsonLayer } from \"@deck.gl/layers\";\nimport Geocoder from \"react-map-gl-geocoder\";\nimport { Editor, EditorModes } from \"react-map-gl-draw\";\n\n/**\n * JS classes\n */\nimport AppData from \"../data/AppData\";\n\n/**\n * CSS Styling\n */\nimport \"../App.css\";\nimport \"../styles/Collapsible.css\";\nimport \"../styles/PinPopup.css\";\nimport \"../static/app.css\";\nimport \"react-map-gl-geocoder/dist/mapbox-gl-geocoder.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Card from \"react-bootstrap/Card\";\n\n/**\n * Map layers\n */\nimport {\n  countyDataLayerFillable,\n  countyDataLayerFillableHighlight,\n  countyDataLayerOutline,\n} from \"../layers/CountyLayer\";\nimport { stateLayerFill, stateLayerFillHighlight } from \"../layers/StateLayer\";\nimport {\n  precinctLayerFill,\n  precinctLayerFillHighlight,\n  precinctLayerOutline,\n} from \"../layers/PrecinctLayer\";\nimport {\n  congressionalLayerFill,\n  congressionalLayerFillHighlight,\n  congressionalLayerOutline,\n} from \"../layers/CongressionalLayer\";\n\n/**\n * Our components\n */\nimport Pins from \"./map/ErrorPins\";\nimport ErrorInfo from \"./map/ErrorModal\";\nimport StateSelector from \"./navbar/StateSelector\";\nimport LeftSidebar from \"./sidebar/LeftSidebar\";\nimport Toolbar from \"./map/toolbar\";\nimport UserModeSelector from \"./navbar/UserModeSelector\";\n\n/**\n * Static data files\n */\nimport ERRORS from \"../data/errors.json\";\n//import STATES_TOOLTIP_DATA from '../data/states_tooltip_data.geojson';\n//import NY_COUNTY_SHORELINE_DATA from '../data/ny_county_shoreline.geojson';\n//import NY_PRECINCT_DATA from '../data/ny_precincts.geojson';\nimport NY_CONGRESSIONAL_DATA from \"../data//New_York_Congressional_Districts.GeoJSON\";\n// import TESTING_PRECINCT_DATA from './data/GeoJSON_example.geojson';\n\n/**\n * Mapbox Style & API Key\n */\nconst MAPBOX_STYLE = \"mapbox://styles/shortland/ck7fn4gmu014c1ip60jlumnm2\";\nconst MAPBOX_API =\n  \"pk.eyJ1Ijoic2hvcnRsYW5kIiwiYSI6ImNqeXVzOWhsbjBpYzczY29hNGZycTlqdXAifQ.B6l-uEqGG-Pw6-quz4eflQ\";\n\n/**\n * @state viewport: the mpas viewport (lat, long, etc)\n *\n */\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stateData: null,\n      countyData: null,\n      countyDataOutline: null,\n      congressionalDistrictData: null,\n      precinctData: null,\n      viewport: {\n        width: \"100%\",\n        height: window.innerHeight,\n        latitude: 37.0902,\n        longitude: -105.7129,\n        zoom: 3.3,\n      },\n      popupInfo: null,\n      selectedFeature: null,\n      selectedMode: EditorModes.READ_ONLY,\n      selectedFeatureId: null,\n      hoveredFeature: null,\n      filter: null,\n      shouldShowPins: false,\n      features: {},\n      selectedFeatureIndex: null,\n      userMode: \"View\",\n      layers: {\n        states: true,\n        counties: true,\n        congressional: true,\n        precincts: true,\n        parks: true,\n      },\n    };\n\n    this._editorRef = null;\n    this.showErrorPins = this.showErrorPins.bind(this);\n    this.appData = new AppData();\n\n    this.filters = {\n      countyFilter: [\"==\", \"NAME\", \"\"],\n      precinctFilter: [\"==\", \"GEOID10\", \"\"],\n      stateFilter: [\"==\", \"name\", \"\"],\n      congressionalFilter: [\"==\", \"NAMELSAD\", \"\"],\n    };\n  }\n\n  /**\n   * For Mapbox geocoding\n   */\n  mapRef = React.createRef();\n\n  handleViewportChange = (viewport) => {\n    this.setState({\n      viewport: { ...this.state.viewport, ...viewport },\n    });\n  };\n\n  handleGeocoderViewportChange = (viewport) => {\n    const geocoderDefaultOverrides = { transitionDuration: 1000 };\n\n    return this.handleViewportChange({\n      ...viewport,\n      ...geocoderDefaultOverrides,\n    });\n  };\n\n  handleOnResult = (event) => {\n    console.log(event.result);\n    this.setState({\n      searchResultLayer: new GeoJsonLayer({\n        id: \"search-result\",\n        data: event.result.geometry,\n        getFillColor: [255, 0, 0, 128],\n        getRadius: 1000,\n        pointRadiusMinPixels: 10,\n        pointRadiusMaxPixels: 10,\n      }),\n    });\n  };\n\n  /**\n   * For React Map Gl Draw\n   */\n  _onDelete = () => {\n    const { selectedFeatureIndex } = this.state;\n    if (selectedFeatureIndex === null || selectedFeatureIndex === undefined) {\n      toast.info(\"Please select a new created precint before deleting action\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      return;\n    } else {\n      toast.info(\"Selected precinct is deleted\", {\n        position: toast.POSITION.BOTTOM_RIGHT,\n      });\n      let features = this.state.features;\n      if (selectedFeatureIndex > -1) {\n        features.data.splice(selectedFeatureIndex, 1);\n      }\n      this.setState({\n        selectedFeatureIndex: null,\n        selectedMode: EditorModes.READ_ONLY,\n        features: features,\n      });\n    }\n    this._editorRef.deleteFeatures(selectedFeatureIndex);\n  };\n\n  _switchMode = (evt) => {\n    let selectedMode = evt.target.id;\n    if (selectedMode === this.state.selectedMode) {\n      selectedMode = null;\n    }\n\n    this.setState({ selectedMode });\n  };\n\n  //Map GL Draw select a feature (a created shape by the MapGLDraw)\n  _onSelect = (selected) => {\n    this.setState({\n      selectedFeatureIndex: selected && selected.selectedFeatureIndex,\n    });\n  };\n  //Map GL Draw update (user draw a new shape)\n  _onUpdate = (features) => {\n    this.setState({\n      features: features,\n      selectedMode: EditorModes.READ_ONLY,\n      selectedFeatureIndex: null,\n    });\n  };\n  // _updateViewport = viewport => {\n  //     this.setState({ viewport });\n  // };\n\n  //toobar save button click event\n  _onSaveRequest = (toolBarRequest) => {\n    if (toolBarRequest) {\n      let selected_saved_feature = this.state.features.data[\n        this.state.selectedFeatureIndex\n      ];\n      console.log(selected_saved_feature);\n      this.setState({\n        selectedMode: EditorModes.READ_ONLY,\n        selectedFeatureIndex: null,\n      });\n      if (selected_saved_feature) {\n        toast.info(\"New precinct is saved\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      } else {\n        toast.info(\"Please select a new created precint to save\", {\n          position: toast.POSITION.BOTTOM_RIGHT,\n        });\n      }\n    }\n  };\n\n  _renderToolbar = () => {\n    const { userMode } = this.state;\n    if (userMode === \"Edit\") {\n      return (\n        <Toolbar\n          selectedMode={this.state.selectedMode}\n          onSwitchMode={this._switchMode}\n          onDelete={this._onDelete}\n          onSelect={this._onSelect}\n          features={this.state.features}\n          selectedFeatureId={this.state.selectedFeatureId}\n          toolBarRequest={this._onSaveRequest}\n        />\n      );\n    } else {\n      return;\n    }\n  };\n\n  _onClick = (event) => {\n    // sets the selected feature onclcik, to have properties displayed by LeftSidebar\n    const { features } = event;\n\n    if (features) {\n      const stateFeature = features.find((f) => f.layer.id === \"stateFill\");\n      const countyFeature = features.find((f) => f.layer.id === \"countyFill\");\n      const congressionalFeature = features.find(\n        (f) => f.layer.id === \"congressionalFill\"\n      );\n      const precinctFeature = features.find(\n        (f) => f.layer.id === \"precinctFill\"\n      );\n\n      if (stateFeature) {\n        stateFeature.properties.type = \"State\";\n        // if a clicks on a state that was already selected/clicked on\n        if (this.state.selectedFeature) {\n          if (\n            stateFeature.properties.name ===\n            this.state.selectedFeature.properties.name\n          ) {\n            this._zoomToFeature(event);\n            return;\n          }\n        } else {\n          toast.info(\n            \"Click the same feature (state/county) again to zoom in.\",\n            {\n              position: toast.POSITION.BOTTOM_RIGHT,\n            }\n          );\n        }\n        this.setState({ selectedFeature: stateFeature });\n      } else if (countyFeature) {\n        countyFeature.properties.type = \"County\";\n        // if a clicks on a county that was already selected/clicked on\n        if (this.state.selectedFeature) {\n          if (\n            countyFeature.properties.NAME ===\n            this.state.selectedFeature.properties.NAME\n          ) {\n            this._zoomToFeature(event);\n            return;\n          }\n        }\n        this.setState({ selectedFeature: countyFeature });\n      } else if (congressionalFeature) {\n        congressionalFeature.properties.type = \"Congressional District\";\n        this.setState({ selectedFeature: congressionalFeature });\n      } else if (precinctFeature) {\n        precinctFeature.properties.type = \"Precinct\";\n        this.setState({ selectedFeature: precinctFeature });\n      } else {\n        //this.setState({ selectedFeature: null });\n      }\n    }\n  };\n\n  _zoomToFeature(event) {\n    const feature = event.features[0];\n\n    if (!feature) {\n      return;\n    }\n\n    if (feature.layer.id === \"stateFill\" || feature.layer.id === \"countyFill\") {\n      const [minLng, minLat, maxLng, maxLat] = bbox(feature);\n      const viewport = new WebMercatorViewport(this.state.viewport);\n      const { longitude, latitude, zoom } = viewport.fitBounds(\n        [\n          [minLng, minLat],\n          [maxLng, maxLat],\n        ],\n        {\n          padding: 40,\n        }\n      );\n\n      this.setState({\n        viewport: {\n          ...this.state.viewport,\n          longitude,\n          latitude,\n          zoom,\n          transitionInterpolator: new LinearInterpolator({\n            around: [event.offsetCenter.x, event.offsetCenter.y],\n          }),\n          transitionDuration: 1000,\n        },\n      });\n      return;\n    }\n  }\n\n  getFeatureFilter = (feature) => {\n    if (!feature) {\n      return null;\n    } else if (feature.isState) {\n      return [\"==\", \"name\", feature.properties.name];\n    } else if (feature.isCounty) {\n      return [\"==\", \"NAME\", feature.properties.NAME];\n    } else if (feature.isCongressional) {\n      return [\"==\", \"NAMELSAD\", feature.properties.NAMELSAD];\n    } else if (feature.isPrecinct) {\n      return [\"==\", \"GEOID10\", feature.properties.GEOID10];\n    } else {\n      return null;\n    }\n  };\n\n  _onHover = (event) => {\n    const {\n      features,\n      srcEvent: { x, y },\n    } = event;\n\n    if (\n      !event.type ||\n      !event.features ||\n      event.features.length === 0 ||\n      event.features[0].source === \"composite\"\n    ) {\n      this.setState({\n        hoveredFeature: null,\n        filter: null,\n      });\n      return;\n    }\n\n    // prevent hovering on pin making the tooltip show at top left of map\n    if (x !== 0 && y !== 0) {\n      this.setState({ x: x, y: y });\n    }\n\n    if (features) {\n      const stateHovered = features.find((f) => f.layer.id === \"stateFill\");\n      const countyHovered = features.find((f) => f.layer.id === \"countyFill\");\n      const congressionalHovered = features.find(\n        (f) => f.layer.id === \"congressionalFill\"\n      );\n      const precinctHovered = features.find(\n        (f) => f.layer.id === \"precinctFill\"\n      );\n\n      const hovered =\n        stateHovered ||\n        countyHovered ||\n        congressionalHovered ||\n        precinctHovered;\n\n      if (stateHovered) {\n        hovered.isState = true;\n      } else if (countyHovered) {\n        hovered.isCounty = true;\n      } else if (congressionalHovered) {\n        hovered.isCongressional = true;\n      } else if (precinctHovered) {\n        hovered.isPrecinct = true;\n      }\n      const filter = this.getFeatureFilter(hovered);\n\n      this.setState({\n        hoveredFeature: hovered,\n        filter: filter,\n      });\n    }\n  };\n\n  _renderTooltip() {\n    const { hoveredFeature, x, y } = this.state;\n\n    if (!hoveredFeature) {\n      return;\n    } else if (hoveredFeature.isState) {\n      const stateHovered = hoveredFeature;\n      return (\n        hoveredFeature && (\n          <div className=\"state-tooltip\" style={{ left: x, top: y }}>\n            <h5>{stateHovered.properties.name}</h5>\n            <div>\n              Congressional Districts:{\" \"}\n              {stateHovered.properties.congressional_districts.length}\n            </div>\n            {/* <br /> */}\n            {/* <div style={{ \"fontStyle\": \"italic\" }}>(click again to enlarge)</div> */}\n          </div>\n        )\n      );\n    } else if (hoveredFeature.isCounty) {\n      const countyHovered = hoveredFeature;\n      return (\n        countyHovered && (\n          <div className=\"state-tooltip\" style={{ left: x, top: y }}>\n            <h5>{countyHovered.properties.NAME} County</h5>\n            <div>FIPS Code: {countyHovered.properties.FIPS_CODE}</div>\n            {/* <br /> */}\n            {/* <div style={{ \"fontStyle\": \"italic\" }}>(click again to enlarge)</div> */}\n          </div>\n        )\n      );\n    } else if (hoveredFeature.isCongressional) {\n      const congressionalHovered = hoveredFeature;\n      return (\n        congressionalHovered && (\n          <div className=\"state-tooltip\" style={{ left: x, top: y }}>\n            <h5>{congressionalHovered.properties.NAMELSAD}</h5>\n            <div></div>\n            {/* <br /> */}\n            {/* <div style={{ \"fontStyle\": \"italic\" }}>(click again to enlarge)</div> */}\n          </div>\n        )\n      );\n    } else if (hoveredFeature.isPrecinct) {\n      const precinctHovered = hoveredFeature;\n      return (\n        precinctHovered && (\n          <div className=\"state-tooltip\" style={{ left: x, top: y }}>\n            <h5>Precinct GEOID: {precinctHovered.properties.GEOID10}</h5>\n            {/* <div>FIPS Code: {precinctHovered.properties}</div> */}\n            {/* <br /> */}\n            {/* <div style={{ \"fontStyle\": \"italic\" }}>(click again to enlarge)</div> */}\n          </div>\n        )\n      );\n    }\n  }\n\n  userModeSelect = (userMode) => {\n    if (userMode) {\n      this.setState({ userMode: userMode });\n    }\n  };\n\n  stateSelect(name) {\n    let latitude = 0;\n    let longitude = 0;\n    let zoom;\n\n    switch (name) {\n      case \"New York\":\n      case \"NY\":\n        latitude = 43.2994;\n        longitude = -76.2179;\n        zoom = 6;\n        break;\n      case \"Wisconsin\":\n      case \"WI\":\n        latitude = 44.7844;\n        longitude = -89.7879;\n        zoom = 6;\n        break;\n      case \"Utah\":\n      case \"UT\":\n        latitude = 39.321;\n        longitude = -112.0937;\n        zoom = 6;\n        break;\n      default:\n    }\n\n    this.setState({\n      viewport: {\n        ...this.state.viewport,\n        latitude: latitude,\n        longitude: longitude,\n        zoom: zoom,\n      },\n    });\n  }\n\n  /**\n   * Rendering error pins on the map & its popup\n   */\n  _onClickError = (error_data) => {\n    this.setState({ popupInfo: error_data });\n    console.log(error_data);\n    this.setState({\n      viewport: {\n        ...this.state.viewport,\n        longitude: error_data.longitude,\n        latitude: error_data.latitude,\n        transitionDuration: 1000,\n        zoom: 11,\n      },\n    });\n  };\n\n  _renderErrorPopup() {\n    const { popupInfo } = this.state;\n\n    return (\n      popupInfo && (\n        <Popup\n          tipSize={5}\n          anchor=\"top\"\n          longitude={popupInfo.longitude}\n          latitude={popupInfo.latitude}\n          closeOnClick={false}\n          onClose={() => this.setState({ popupInfo: null })}\n        >\n          <ErrorInfo info={popupInfo} />\n        </Popup>\n      )\n    );\n  }\n\n  showErrorPins() {\n    const { shouldShowPins } = this.state;\n\n    if (shouldShowPins) {\n      this.setState({\n        shouldShowPins: false,\n      });\n    } else {\n      this.setState({\n        shouldShowPins: true,\n      });\n    }\n  }\n\n  componentDidMount() {\n    /**\n     * Get all the states\n     */\n    this.appData.fetchAllStates().then((data) => {\n      this.setState({\n        stateData: data.featureCollection,\n      });\n    });\n\n    /**\n     * Get all the congressional districts\n     */\n    this.appData.fetchAllCongressionalDistricts().then((cdData) => {\n      this.setState({\n        congressionalDistrictData: cdData,\n      });\n    });\n\n    /**\n     * State data\n     */\n    /* json(\n            STATES_TOOLTIP_DATA,\n            (error, response) => {\n                if (!error) {\n                    console.log(response)\n                    // this.setState({ stateData: response});\n                }\n            }\n        ); */\n    /**\n     * County data outline\n     */\n    /* json(\n            NY_COUNTY_SHORELINE_DATA,\n            (error, response) => {\n                if (!error) {\n                    this.setState({countyDataOutline: response});\n                }\n            }\n        ); */\n    /**\n     * County data\n     */\n    /* json(\n            NY_COUNTY_SHORELINE_DATA,\n            (error, response) => {\n                if (!error) {\n                    this.setState({countyData: response});\n                }\n            }\n        );\n        */\n    // json(\n    //     NY_CONGRESSIONAL_DATA,\n    //     (error, response) => {\n    //         if (!error) {\n    //             console.log(response);\n    //             this.setState({ congressionalDistrictData: response });\n    //         }\n    //     }\n    // );\n\n    /* json(\n            NY_PRECINCT_DATA,\n            (error, response) => {\n                if (!error) {\n                    console.log(response);\n                    this.setState({precinctData: response});\n                }\n                else {\n                    console.log(error);\n                }\n            }\n        ); */\n  }\n\n  /**\n   * called when rendering our data layers to the map\n   */\n  renderLayers() {\n    const {\n      stateData,\n      countyData,\n      countyDataOutline,\n      congressionalDistrictData,\n      precinctData,\n      stateFilter,\n      countyFilter,\n      precinctFilter,\n      congressionalFilter,\n    } = this.state;\n    const { layers } = this.state;\n\n    return (\n      <>\n        {/* NY COUNTY DATA */}\n        {/* < Source type=\"geojson\" data={countyData} >\n                    <Layer\n                        {...countyDataLayerFillableHighlight}\n                        filter={countyFilter}\n                        minzoom={5}\n                        maxzoom={8}\n                    />\n                    <Layer\n                        {...countyDataLayerFillable}\n                        minzoom={5}\n                        maxzoom={8}\n                    />\n                </Source > */}\n\n        {/* NY COUNTY DATA (OUTLINE) */}\n        {/* < Source type=\"geojson\" data={countyDataOutline} >\n                    <Layer\n                        {...countyDataLayerOutline}\n                        minzoom={5}\n                    // maxzoom={8}\n                    />\n                </Source > */}\n\n        {/* NY PRECINCT DATA */}\n        {/* {\n                    layers.precinct &&\n                    < Source type=\"geojson\" data={precinctData} >\n                        <Layer\n                            {...precinctLayerFillHighlight}\n                            filter={precinctFilter}\n                            minzoom={8}\n                        />\n                        <Layer\n                            {...precinctLayerOutline}\n                            minzoom={8}\n                        />\n                        <Layer\n                            {...precinctLayerFill}\n                            minzoom={8}\n                        />\n                    </Source >\n                } */}\n      </>\n    );\n  }\n\n  /**\n   * Render state data\n   */\n  renderStateLayers() {\n    const { layers, stateData, stateFilter } = this.state;\n\n    return (\n      <>\n        {layers.states && (\n          <Source type=\"geojson\" data={stateData}>\n            <Layer\n              {...stateLayerFillHighlight}\n              filter={stateFilter}\n              maxzoom={5}\n            />\n            <Layer {...stateLayerFill} maxzoom={5} />\n          </Source>\n        )}\n      </>\n    );\n  }\n\n  /**\n   * Render congressional data\n   */\n  renderCongressionalLayers() {\n    const { layers, congressionalDistrictData } = this.state;\n\n    return (\n      <>\n        {layers.congressional && (\n          <Source type=\"geojson\" data={congressionalDistrictData}>\n            <Layer\n              {...congressionalLayerFillHighlight}\n              //filter={congressionalFilter}\n              minzoom={5}\n            />\n            <Layer {...congressionalLayerOutline} minzoom={5} />\n            <Layer {...congressionalLayerFill} minzoom={5} />\n          </Source>\n        )}\n      </>\n    );\n  }\n\n  /**\n   * Render precinct data\n   */\n  renderPrecinctLayers() {\n    const { layers, precinctData } = this.state;\n\n    return (\n      <>\n        {layers.precinct && (\n          <Source type=\"geojson\" data={precinctData}>\n            <Layer\n              {...precinctLayerFillHighlight}\n              // filter={precinctFilter}\n              minzoom={8}\n            />\n            <Layer {...precinctLayerOutline} minzoom={8} />\n            <Layer {...precinctLayerFill} minzoom={8} />\n          </Source>\n        )}\n      </>\n    );\n  }\n\n  render() {\n    const { viewport, selectedMode, shouldShowPins } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Election Data Quality</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <StateSelector\n                select_state={(state_abv) =>\n                  this.stateSelect.bind(this, state_abv)\n                }\n              />\n              <UserModeSelector\n                userModeSelect={(selectedMode) =>\n                  this.userModeSelect(selectedMode)\n                }\n              />\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar> */}\n        <div className=\"selectStateItem inlineDivs\">\n          <StateSelector\n            select_state={(state_abv) => this.stateSelect.bind(this, state_abv)}\n          />\n        </div>\n        <div className=\"toggleModeItem inlineDivs\">\n          <UserModeSelector\n            userModeSelect={(selectedMode) => this.userModeSelect(selectedMode)}\n          />\n        </div>\n\n        <div>\n          <div id=\"leftCol\">\n            <LeftSidebar\n              selected={this.state.selectedFeature}\n              showErrorPins={this.showErrorPins.bind(this)}\n            />\n          </div>\n\n          <MapGL\n            {...viewport}\n            onViewportChange={(viewport) =>\n              this.setState({ viewport: viewport })\n            }\n            mapStyle={MAPBOX_STYLE}\n            mapboxApiAccessToken={MAPBOX_API}\n            onHover={this._onHover}\n            onClick={this._onClick}\n            doubleClickZoom={false}\n            ref={this.mapRef}\n          >\n            <div\n              id=\"map-checkboxes\"\n              style={{\n                position: \"absolute\",\n                textAlign: \"left\",\n                fontSize: \"10pt\",\n                top: \"10%\",\n                right: \"10px\",\n              }}\n            >\n              {this._renderCheckboxes()}\n            </div>\n\n            <Editor\n              ref={(_) => (this._editorRef = _)}\n              clickRadius={12}\n              onSelect={(selected) => this._onSelect(selected)}\n              onUpdate={(features) => this._onUpdate(features)}\n              mode={selectedMode}\n            />\n\n            {/* Geocoder - enables searching on the map */}\n            <Geocoder\n              mapRef={this.mapRef}\n              onResult={this.handleOnResult}\n              onViewportChange={this.handleGeocoderViewportChange}\n              mapboxApiAccessToken={MAPBOX_API}\n              position=\"top-right\"\n            />\n            {/* This is used alongside the Geocoder... \n                            But apparently it doesn't need to be here for the geocoder to work?\n                            I commented it out - because it mysteriously breaks the Editor...\n                         */}\n            {/* <DeckGL {...viewport} layers={[searchResultLayer]} /> */}\n\n            {/* For rendering the controls at top left of the map */}\n            <div className=\"FullScreenController MapControllers\">\n              <FullscreenControl />\n            </div>\n            <div className=\"NavigationController MapControllers\">\n              <NavigationControl />\n            </div>\n            <div className=\"ScaleController MapControllers\">\n              <ScaleControl />\n            </div>\n\n            {/* {this.renderLayers()} */}\n\n            {this.renderStateLayers()}\n\n            {this.renderCongressionalLayers()}\n\n            {this.renderPrecinctLayers()}\n\n            {this._renderTooltip()}\n\n            {this._renderToolbar()}\n\n            {/* For rendering pins over our map */}\n            <Pins\n              data={ERRORS}\n              onClick={this._onClickError}\n              shouldShowPins={shouldShowPins}\n            />\n            {this._renderErrorPopup()}\n          </MapGL>\n        </div>\n\n        <ToastContainer />\n      </div>\n    );\n  }\n\n  toggleLayer = (layer) => {\n    const { layers } = this.state;\n    switch (layer) {\n      case \"States\":\n        layers.states = !layers.states;\n        break;\n      case \"Counties\":\n        layers.counties = !layers.counties;\n        break;\n      case \"Congressional Districts\":\n        layers.congressional = !layers.congressional;\n        break;\n      case \"Precincts\":\n        layers.precincts = !layers.precincts;\n        break;\n      case \"National Parks\":\n        layers.parks = !layers.parks;\n        break;\n      default:\n    }\n    this.setState({ layers: layers });\n  };\n\n  _renderCheckboxes = () => {\n    return (\n      <div>\n        <Card\n          border=\"secondary\"\n          style={{ width: \"10rem\", backgroundColor: \"rgba(255,255,255,0.9)\" }}\n        >\n          <Card.Header>Layers</Card.Header>\n          <Card.Body>\n            <Form>\n              {[\n                \"States\",\n                \"Counties\",\n                \"Congressional Districts\",\n                \"Precincts\",\n                \"National Parks\",\n              ].map((name) => (\n                <div key={\"checkbox-\".concat(name)}>\n                  <Form.Check\n                    label={name}\n                    type={\"checkbox\"}\n                    defaultChecked={true}\n                    onChange={this.toggleLayer.bind(this, name)}\n                  />\n                </div>\n              ))}\n            </Form>\n          </Card.Body>\n          <Card.Footer style={{ lineHeight: \"1.0\" }}>\n            <small className=\"text-muted\">\n              Note: some layers will only show at certain zoom levels\n            </small>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  };\n}\n\nexport function renderToDom(container) {\n  render(<App />, container);\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('map'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}